#!/usr/bin/env python
#
# Simple script for "proofreading" a LaTeX file.
#
# Anders Logg, 2010-12-16

import sys

# List of things to check
checklist = [("i.e.",              "'; that is,'"),
             ("\\cite{",           "\\citet{} or \\citep{}"),
             ("multiindex",        "multi-index"),
             ("multi index",       "multi-index"),
             ("PyDOLFIN",          "DOLFIN"),
             ("editornote",        "fix!"),
             ("authornote",        "fix!"),
             ("displaymath",       "equation"),
             ("equation*",         "equation"),
             ("align*",            "align"),
             ("eqnarray*",         "eqnarray"),
             ("\\forall ",         "\\foralls"),
             ("\\forall\\",        "\\foralls"),
             ("\\geq ",            "\\geqslant"),
             ("\\geq\\",           "\\geqslant"),
             ("\\geq\n",           "\\geqslant"),
             ("\\leq ",            "\\leqslant"),
             ("\\leq\\",           "\\leqslant"),
             ("\\leq\n",           "\\leqslant"),
             ("\\mathcal{T} ",     "\\mathcal{T}_h"),
             ("\\mathcal{T}\\",    "\\mathcal{T}_h"),
             ("commandline",       "command-line"),
             ("command line",      "command-line"),
             ("Nedelec",           "\\nedelec{}"),
             ("element tensor",    "cell tensor"),
             ("etc ",              "etc."),
             ("etc,",              "etc.,"),
             ("cf.",               "see"),
             ("fig.",              "Figure"),
             ("Fig.",              "Figure"),
             ("PyDOLFIN",          "DOLFIN"),
             ("eq.",               ""),
             ("Eq.",               ""),
             ("(\ref{",            "\eqref{}"),
             ("\\begin{code}",     "\begin{python/c++/bash}"),
             (" sub ",             "subfoo"),
             ("Navier-Stokes",      "Navier--Stokes"),
             ("\\nabla u \\cdot u", "\\nabla u \, u"),
             ("d\Omega",            "\\dx"),
             (" dx",                "\\dx"),
             (" ds",                "\\ds")]

# List of words that are allowed to be uppercase in titles
uppercase = ["Argyris",
             "Landweber",
             "Laplacian",
             "FEniCS",
             "Lagrange",
             "Crouzeix--Raviart",
             "Raviart--Thomas",
             "Brezzi--Douglas--Marini",
             "Mardal-Tai-Winther",
             "Arnold--Winther",
             "Hermite",
             "Morley",
             "FFC",
             "Navier--Stokes",
             "FErari",
             "Python",
             "UFL",
             "Galerkin",
             "Circle",
             "Willis",
             "PC",
             "MRA",
             "PDEs",
             "Neumann",
             "Poisson",
             "Stokes",
             "Hodge",
             "UFC"]

def check_capitalization(text):
    warnings = []
    for line in text.split("\n"):
        for section in ("section", "paragraph", "fenicschapter"):
            if ("%s{" % section) in line:
                line = line.split("%s{" % section)[1]
                line = line.split("}")[0]
                for word in line.split(" ")[1:]:
                    if word[0].isupper() and not word in uppercase:
                        warnings.append("Capitalized section: %s" % line)
    return warnings

def check_all(text):
    "Check stuff"

    warnings = []

    # Checks performed before stripping
    warnings += check_capitalization(text)

    # Remove newlines, whitespaces etc
    text = strip_text(text)

    # Check simple replacements
    for (a, b) in checklist:
        if a in text:
            warnings += ["%s --> %s" % (a, b)]

    # I like this line
    warnings = [warning for warning in warnings if warning is not None]

    return warnings

def strip_text(text):
    "Remove newlines, whitespaces etc"
    text = text.replace("\n", " ")
    text = text.replace("\t", " ")
    while True:
        new_text = text.replace("  ", " ")
        if len(new_text) == len(text):
            break
        text = new_text
    return text

if __name__ == "__main__":

    # Get file name
    if not len(sys.argv) == 2:
        print "Usage: proofread file.tex"
        sys.exit(1)
    filename = sys.argv[1]

    # Open file and read text
    try:
        file = open(filename)
        text = file.read()
        file.close()
    except:
        print "Unable to open file '%s'." % filename
        sys.exit(1)

    # Check stuff
    warnings = check_all(text)

    # Print results
    if len(warnings) == 0:
        s = "%s: OK" % filename
        print s + "\n" + "-"*len(s)
    else:
        s = "%s: %d warning(s)" % (filename, len(warnings))
        print s + "\n" + "-"*len(s)
        for warning in warnings:
            print "- " + warning
